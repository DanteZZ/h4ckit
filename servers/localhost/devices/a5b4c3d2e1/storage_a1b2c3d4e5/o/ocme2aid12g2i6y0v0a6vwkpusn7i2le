/* GATEWAY */
const _std = _process.std;
var server, http, client, _netw = null;

const DHCPDISCOVER = "DHCPDISCOVER";
const DHCPOFFER = "DHCPOFFER";

const DHCPSRVPORT = 67;
const DHCPCLIENTPORT = 68; 

_initialize = async () => {
	server = await _import("libs/server");
	_netw = await _import("libs/network");

	http = new server(DHCPSRVPORT,receiver);
	_std.write("DHCP server is started");
	_std.write(`Listening ${DHCPSRVPORT} port`);
}

_exiting = async () => {
	http.close();
}

const receiver = (d,eth) => {
	_std.write(`Answer: ${JSON.stringify([d,eth])}`);
	_netw.sendPackageToPort(eth.name,"*:"+DHCPCLIENTPORT,{
		YIADDR:"192.168.1.100",
		SIADDR:"192.168.1.1",
		OPTIONS:{
			MASK:24
		}
	})
};